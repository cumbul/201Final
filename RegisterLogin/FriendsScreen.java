/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package registerlogin;

import java.util.ArrayList;
import javax.swing.JTable;
import javax.swing.JFrame;
import javax.swing.JScrollPane;
import javax.swing.JTable;

/**
 *
 * @author Karalee
 */
public class FriendsScreen extends javax.swing.JFrame {
    /**
     * Creates new form FriendsScreen
     */
    public FriendsScreen() {
        initComponents();
        setSize(1296,1005);
        setLocation(300,20);
        setVisible(true);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        
        //friends table stuff below
        friendsTable.setEnabled(false);//disable user from editing table text
        friendsTable.getColumnModel().getColumn(0).setPreferredWidth(250);
        friendsTable.getColumnModel().getColumn(1).setPreferredWidth(50);
        friendsTable.setRowHeight(40);
        friendsTable.getTableHeader().setBackground(new java.awt.Color(179, 11, 11));
        friendsTable.getTableHeader().setForeground(new java.awt.Color(250, 250, 250));
        friendsTable.setBackground(new java.awt.Color(250, 250, 250));
        addFriendsToTable();
        
        //search results table layout stuff below
        searchResultsTable.setEnabled(false);//disable user from editing table text
        searchResultsTable.getColumnModel().getColumn(0).setPreferredWidth(250);
        searchResultsTable.getColumnModel().getColumn(1).setPreferredWidth(50);
        searchResultsTable.setRowHeight(40);
        searchResultsTable.getTableHeader().setBackground(new java.awt.Color(179, 11, 11));
        searchResultsTable.getTableHeader().setForeground(new java.awt.Color(250, 250, 250));
        searchResultsTable.setBackground(new java.awt.Color(250, 250, 250));
    }
    public void close(){//closes this window
        this.setVisible(false);
        this.dispose();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        friendsTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        searchResultsTable = new javax.swing.JTable();
        friendsLabel = new javax.swing.JLabel();
        searchResultsLabel = new javax.swing.JLabel();
        searchTextBox = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        backBtn.setBackground(new java.awt.Color(179, 11, 11));
        backBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        backBtn.setForeground(new java.awt.Color(250, 250, 250));
        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        getContentPane().add(backBtn);
        backBtn.setBounds(40, 870, 145, 57);

        friendsTable.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        friendsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Username", ""
            }
        ));
        friendsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                friendsTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(friendsTable);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(83, 207, 487, 594);

        searchResultsTable.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        searchResultsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Username", ""
            }
        ));
        searchResultsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchResultsTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(searchResultsTable);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(724, 207, 480, 594);

        friendsLabel.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        friendsLabel.setText("Friends");
        getContentPane().add(friendsLabel);
        friendsLabel.setBounds(267, 145, 115, 38);

        searchResultsLabel.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        searchResultsLabel.setText("Search Results");
        getContentPane().add(searchResultsLabel);
        searchResultsLabel.setBounds(858, 145, 232, 44);

        searchTextBox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        searchTextBox.setText("Search Username");
        searchTextBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTextBoxActionPerformed(evt);
            }
        });
        getContentPane().add(searchTextBox);
        searchTextBox.setBounds(716, 74, 417, 53);

        searchBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/registerlogin/magnifying glass.png"))); // NOI18N
        searchBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });
        getContentPane().add(searchBtn);
        searchBtn.setBounds(1140, 70, 62, 62);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/registerlogin/gradient-white-yellow-linear-1920x1080-c2-ffffff-ffd700-a-90-f-14.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 1300, 1020);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void addFriendsToTable()
    {
        ArrayList <User> friendsList = StartUp.user.getFriends();
        javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel)friendsTable.getModel();
        model.setRowCount(0);//clear table thing for new friends to be added if refeshed
        for(int i = 0; i < friendsList.size(); i++)
        {
            try
            {
                model.addRow(new Object[]{friendsList.get(i).getUname(), "UnFriend"});
            }
            catch(NullPointerException e)
            {
                System.out.println("MODEL IS NULL???");
            }
        }
        
    }
    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // go back home
        Home homeScreen = new Home();
        close();
                
    }//GEN-LAST:event_backBtnActionPerformed

    private void searchTextBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTextBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchTextBoxActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        // search for users with the username types above, display them in table
        String search = searchTextBox.getText();
        ArrayList<User> searchResults = StartUp.userDriver.searchUsernames(search);
        ArrayList<Integer> addedUsersIDs = StartUp.user.getAddedUsersIDs();//people user has added
        javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel)searchResultsTable.getModel();//get table thing
        model.setRowCount(0);//clear table thing for new search results
        for(int i = 0; i < searchResults.size(); i++)//iterate through searchresults found
        {
            try
            {
                String secondColText = "";//will say 'add' or 'added' depending on if we are following this user being displayed
                if(addedUsersIDs.contains(searchResults.get(i).getUserID()))//user has added this person
                {
                    secondColText = "UnAdd";
                }
                else//user is not yet following this person
                {
                    secondColText = "Add";
                }
                model.addRow(new Object[]{searchResults.get(i).getUname(), secondColText});
            }
            catch(NullPointerException e)
            {
                System.out.println("MODEL IS NULL???");
                break;
            }
        }
    }//GEN-LAST:event_searchBtnActionPerformed
    private void updateSearchResultsTable(){//refresh search results table
        // search for users with the username types above, display them in table
        String search = searchTextBox.getText();
        ArrayList<User> searchResults = StartUp.userDriver.searchUsernames(search);
        ArrayList<Integer> addedUsersIDs = StartUp.user.getAddedUsersIDs();//people user has added
        javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel)searchResultsTable.getModel();//get table thing
        model.setRowCount(0);//clear table thing for new search results
        for(int i = 0; i < searchResults.size(); i++)//iterate through searchresults found
        {
            try
            {
                String secondColText = "";//will say 'add' or 'added' depending on if we are following this user being displayed
                if(addedUsersIDs.contains(searchResults.get(i).getUserID()))//user has added this person
                {
                    secondColText = "UnAdd";
                }
                else//user is not yet following this person
                {
                    secondColText = "Add";
                }
                model.addRow(new Object[]{searchResults.get(i).getUname(), secondColText});
            }
            catch(NullPointerException e)
            {
                System.out.println("MODEL IS NULL???");
                break;
            }
        }
    }
    private void searchResultsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchResultsTableMouseClicked
        // when 2nd column is clicked, add friend
        int row = searchResultsTable.rowAtPoint(evt.getPoint());
        int col = searchResultsTable.columnAtPoint(evt.getPoint());
        System.out.println("ROW CLICKED: "+row);
        System.out.println("COL CLICKED: "+col);
        String cellText = (String)searchResultsTable.getModel().getValueAt(row, col);//text that says "Add" or "unAdd"
        System.out.println("cell text: "+cellText);
        
            if(cellText.equals("Add"))//when clicked, add this user
            {
                String userToAddName = (String)searchResultsTable.getModel().getValueAt(row, 0);
                System.out.println("user to add name: "+userToAddName);
                User userToAdd = StartUp.userDriver.findByUname(userToAddName);
                System.out.println("username: "+userToAdd.getUname());
                StartUp.user.addFriends(userToAdd);
                searchResultsTable.getModel().setValueAt("UnAdd", row, 1);
                System.out.println("added");
                addFriendsToTable();//update friends table to add friend if they have added u back
            }
            else if(cellText.equals("UnAdd"))//when clicked, un add user
            {
                String userToAddName = (String)searchResultsTable.getModel().getValueAt(row, 0);
                System.out.println("user to unadd name: "+userToAddName);
                User userToAdd = StartUp.userDriver.findByUname(userToAddName);
                System.out.println("username: "+userToAdd.getUname());
                StartUp.user.unAddFriends(userToAdd);
                searchResultsTable.getModel().setValueAt("Add", row, 1);
                System.out.println("unadded");
                addFriendsToTable();//update friends table to take the user off friends list
            }
        
    }//GEN-LAST:event_searchResultsTableMouseClicked

    private void friendsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_friendsTableMouseClicked
        // if 'unfriend' cell is clicked, unfriend the user
        int row = friendsTable.rowAtPoint(evt.getPoint());
        int col = friendsTable.columnAtPoint(evt.getPoint());
        //update search result table
        System.out.println("ROW CLICKED: "+row);
        
        String userToUnfriendName = (String)(friendsTable.getModel().getValueAt(row, 0));
        System.out.println("user to unfriend name: "+userToUnfriendName);
        User userToUnfriend = StartUp.userDriver.findByUname(userToUnfriendName);
        StartUp.user.unAddFriends(userToUnfriend);
        System.out.println("unadded");
        
        updateSearchResultsTable();//update search results table to show that thye are no unadd/added
        addFriendsToTable();//update friends table to take the user off friends list
    }//GEN-LAST:event_friendsTableMouseClicked
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FriendsScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FriendsScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FriendsScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FriendsScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FriendsScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JLabel friendsLabel;
    private javax.swing.JTable friendsTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton searchBtn;
    private javax.swing.JLabel searchResultsLabel;
    private javax.swing.JTable searchResultsTable;
    private javax.swing.JTextField searchTextBox;
    // End of variables declaration//GEN-END:variables
}
